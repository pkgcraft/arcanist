name: CI

on:
  push:
    branches-ignore: [audit,deploy]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust-version: ['1.60.0', 'stable']

    steps:
    - name: Checkout workspace
      uses: actions/checkout@v3
      with:
        repository: pkgcraft/pkgcraft-workspace
        submodules: recursive

    - name: Pull submodule updates
      run: git submodule update --recursive --remote

    - name: Remove current repo from workspace
      run: rm -rfv ${{ github.event.repository.name }}

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        path: ${{ github.event.repository.name }}

    - name: Set up rust toolchain
      uses: actions-rs/toolchain@v1
      id: rust
      with:
        toolchain: ${{ matrix.rust-version }}
        profile: minimal
        override: true

    - name: Set up rust cache
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          target
        key: v4-${{ github.job }}-${{ runner.os }}-rust-${{ steps.rust.outputs.rustc_hash }}-cargo-${{ hashFiles('Cargo.lock') }}
        restore-keys: v4-${{ github.job }}-${{ runner.os }}-rust-${{ steps.rust.outputs.rustc_hash }}-cargo-

    - name: Update deps
      run: cargo update -p ${{ github.event.repository.name }}

    - name: Install cargo-nextest
      uses: taiki-e/install-action@nextest

    - name: Build and test
      run: cargo nextest run --color always --all-features -p ${{ github.event.repository.name }}

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout workspace
      uses: actions/checkout@v3
      with:
        repository: pkgcraft/pkgcraft-workspace
        submodules: recursive

    - name: Pull submodule updates
      run: git submodule update --recursive --remote

    - name: Remove current repo from workspace
      run: rm -rfv ${{ github.event.repository.name }}

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        path: ${{ github.event.repository.name }}

    - name: Set up rust toolchain
      uses: actions-rs/toolchain@v1
      id: rust
      with:
        toolchain: stable
        profile: minimal
        override: true
        components: clippy, rustfmt

    - name: Set up rust cache
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          target
        key: v4-${{ github.job }}-${{ runner.os }}-rust-${{ steps.rust.outputs.rustc_hash }}-cargo-${{ hashFiles('Cargo.lock') }}
        restore-keys: v4-${{ github.job }}-${{ runner.os }}-rust-${{ steps.rust.outputs.rustc_hash }}-cargo-

    - name: Update deps
      run: cargo update -p ${{ github.event.repository.name }}

    - name: Run rustfmt
      run: cargo fmt --check -p ${{ github.event.repository.name }}

    - name: Run clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: -p ${{ github.event.repository.name }}
